services:
  # CMS Backend Development
  cms-dev:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: siuji-cms-backend-dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PAYLOAD_SECRET=${PAYLOAD_SECRET}
      - DATABASE_URI=${DATABASE_URI}
      - SERVER_URL=${SERVER_URL}
      - CORS_ORIGINS=${CORS_ORIGINS}
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - siuji-network

  # Database Service
  db:
    image: postgres:15-alpine
    container_name: siuji-cms-database-dev
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - siuji-network

volumes:
  postgres_data_dev:
    driver: local

networks:
  siuji-network:
    driver: bridge
